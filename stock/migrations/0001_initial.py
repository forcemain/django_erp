# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2017-05-31 14:43
from __future__ import unicode_literals

import common.statemachine.state
from django.db import migrations, models
import django.db.models.deletion
import djangoperm.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('account', '0002_auto_20170523_2339'),
    ]

    operations = [
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', djangoperm.db.fields.BooleanField(default=True, help_text='记录的可用状态,False为不可用,True为可用', perms={'read': False, 'write': False}, verbose_name='可用状态')),
                ('is_delete', djangoperm.db.fields.BooleanField(default=False, help_text='记录的删除状态,True删除不可视,False为尚未删除', perms={'read': False, 'write': False}, verbose_name='删除状态')),
                ('create_time', djangoperm.db.fields.DateTimeField(auto_now_add=True, help_text='记录的创建时间,UTC时间', perms={'read': False, 'write': False}, verbose_name='创建时间')),
                ('last_modify_time', djangoperm.db.fields.DateTimeField(auto_now=True, help_text='记录的最后修改时间,UTC时间', perms={'read': False, 'write': False}, verbose_name='最后修改时间')),
                ('is_virtual', djangoperm.db.fields.BooleanField(default=False, help_text='库位的虚拟状态', perms={'read': False, 'write': False}, verbose_name='虚拟库位')),
                ('x', djangoperm.db.fields.CharField(blank=True, help_text='库位的X轴坐标', max_length=90, perms={'read': False, 'write': False}, verbose_name='X')),
                ('y', djangoperm.db.fields.CharField(blank=True, help_text='库位的Y轴坐标', max_length=90, perms={'read': False, 'write': False}, verbose_name='Y')),
                ('z', djangoperm.db.fields.CharField(blank=True, help_text='库位的Z轴坐标', max_length=90, perms={'read': False, 'write': False}, verbose_name='Z')),
                ('parent_location', models.ForeignKey(blank=True, help_text='库位所属的上级库位,若库位为区域的基本库位,则必须为虚拟库位', null=True, on_delete=django.db.models.deletion.CASCADE, to='stock.Location', verbose_name='上级库位')),
            ],
            options={
                'verbose_name': '库位',
                'verbose_name_plural': '库位',
            },
        ),
        migrations.CreateModel(
            name='Warehouse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', djangoperm.db.fields.BooleanField(default=True, help_text='记录的可用状态,False为不可用,True为可用', perms={'read': False, 'write': False}, verbose_name='可用状态')),
                ('is_delete', djangoperm.db.fields.BooleanField(default=False, help_text='记录的删除状态,True删除不可视,False为尚未删除', perms={'read': False, 'write': False}, verbose_name='删除状态')),
                ('create_time', djangoperm.db.fields.DateTimeField(auto_now_add=True, help_text='记录的创建时间,UTC时间', perms={'read': False, 'write': False}, verbose_name='创建时间')),
                ('last_modify_time', djangoperm.db.fields.DateTimeField(auto_now=True, help_text='记录的最后修改时间,UTC时间', perms={'read': False, 'write': False}, verbose_name='最后修改时间')),
                ('name', djangoperm.db.fields.CharField(help_text='仓库的名称', max_length=90, perms={'read': False, 'write': False}, verbose_name='名称')),
                ('is_inside', djangoperm.db.fields.BinaryField(default=True, help_text='是否为内部仓库', perms={'read': False, 'write': False}, verbose_name='是否为内部仓库')),
                ('address', models.ForeignKey(help_text='仓库的地理位置', on_delete=django.db.models.deletion.CASCADE, to='account.Address', verbose_name='地址')),
                ('partner', models.ForeignKey(help_text='仓库的相关合作伙伴或联系人', on_delete=django.db.models.deletion.CASCADE, to='account.Partner', verbose_name='联系人')),
            ],
            options={
                'verbose_name': '仓库',
                'verbose_name_plural': '仓库',
            },
            bases=(models.Model, common.statemachine.state.StateMachine),
        ),
        migrations.CreateModel(
            name='Zone',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', djangoperm.db.fields.BooleanField(default=True, help_text='记录的可用状态,False为不可用,True为可用', perms={'read': False, 'write': False}, verbose_name='可用状态')),
                ('is_delete', djangoperm.db.fields.BooleanField(default=False, help_text='记录的删除状态,True删除不可视,False为尚未删除', perms={'read': False, 'write': False}, verbose_name='删除状态')),
                ('create_time', djangoperm.db.fields.DateTimeField(auto_now_add=True, help_text='记录的创建时间,UTC时间', perms={'read': False, 'write': False}, verbose_name='创建时间')),
                ('last_modify_time', djangoperm.db.fields.DateTimeField(auto_now=True, help_text='记录的最后修改时间,UTC时间', perms={'read': False, 'write': False}, verbose_name='最后修改时间')),
                ('usage', djangoperm.db.fields.CharField(choices=[('warehouse', '仓库'), ('transfer-pick', '分拣流程区域'), ('transfer-pack', '打包流程区域'), ('transfer-check', '验货流程区域'), ('transfer-out', '出库流程区域'), ('transfer-in', '入库流程区域'), ('scrap', '报废区域'), ('close-out', '平仓区域'), ('init', '初始区域')], default='container', help_text='区域的用途', max_length=20, perms={'read': False, 'write': False}, verbose_name='用途')),
                ('self_location', models.OneToOneField(help_text='区域的基本位置', on_delete=django.db.models.deletion.CASCADE, related_name='self_zone', to='stock.Location', verbose_name='库位')),
                ('warehouse', models.ForeignKey(help_text='区域所属的仓库', on_delete=django.db.models.deletion.CASCADE, to='stock.Warehouse', verbose_name='仓库')),
            ],
            options={
                'verbose_name': '区域',
                'verbose_name_plural': '区域',
            },
        ),
        migrations.AddField(
            model_name='location',
            name='warehouse',
            field=models.ForeignKey(help_text='库位所属的仓库', on_delete=django.db.models.deletion.CASCADE, to='stock.Warehouse', verbose_name='仓库'),
        ),
        migrations.AddField(
            model_name='location',
            name='zone',
            field=models.ForeignKey(help_text='库位所属的区域', on_delete=django.db.models.deletion.CASCADE, related_name='locations', to='stock.Zone', verbose_name='区域'),
        ),
    ]
